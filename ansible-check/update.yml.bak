- name: "Shanghai Csdp Module update"
  hosts: "{{ service }}"
  gather_facts: false
  vars_files:
  - apps.yml
  tasks:
  - name: "Backups {{ service }} app"
    shell: |
        if [ ! -d "{{ apps[service].dir }}/{{ apps[service].name }}.{{ version }}.bak" ]; then
           sudo cp -r "{{ apps[service].dir }}/{{ apps[service].name }}" "{{ apps[service].dir }}/{{ apps[service].name }}.{{ version }}.bak"
        fi
    ignore_errors: false

  - name: "Check {{ service }} Backups"
    stat:
      path: "{{ apps[service].dir }}/{{ apps[service].name }}.{{ version }}.bak"
    register: backups_status

  - name: "Check {{ service }} status"
    debug:
      msg: "Backup succeeded: {{ apps[service].dir }}/{{ apps[service].name }}.{{ version }}.bak"
    when: backups_status.stat.exists == True

  - name: "Create directories and check files"
    shell: |
        if [ ! -d "{{ apps[service].dest }}/{{ service }}" ];  then
           mkdir "{{ apps[service].dest }}/{{ service }}"
        fi
        if [ -f "{{ apps[service].dest }}/{{ service }}/{{ apps[service].name }}.zip" ]; then
           rm -f "{{ apps[service].dest }}/{{ service }}/{{ apps[service].name }}.zip"
        fi

  - name: "scp {{ service }} package"
    copy:
      src: "{{ apps[service].src }}"
      dest: "{{ apps[service].dest }}/{{ service }}"
      backup: no
    ignore_errors: false

  - name: "Check the {{ service }} status"    
    stat:
      path: "{{ apps[service].dest }}/{{ service }}/{{ apps[service].name }}.zip"
    register: file_status  

  - name: "Check {{ service }} transmission"
    debug:
      msg: "scp succeeded: {{ apps[service].dest }}/{{ service }}/{{ apps[service].name }}.zip"
    when: file_status.stat.exists == True

  - name: "Check {{ service }} pid"
    shell: |
        pid=$(ps -ef | grep -w "{{ service }}" | grep -v grep | awk '{print $2}')
        echo ${pid}
    register: pid

  - name: "print {{ service }} pid"
    debug:
      msg: "{{ pid.stdout }}"
    when: pid.stdout != ""
